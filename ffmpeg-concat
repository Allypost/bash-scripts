#!/usr/bin/env bash
NO_FORMAT="\033[0m"
F_BOLD="\033[1m"
F_DIM="\033[2m"
C_GREEN="\033[38;5;2m"
C_GRAY="\033[38;5;8m"
C_RED="\033[38;5;9m"

if [ -n "$DEBUG" ]; then
	set -e
fi
set -euo pipefail

function log() {
	printf "${F_DIM}[%s]${NO_FORMAT} $1${NO_FORMAT}\n" "$(date +'%Y-%m-%d %H:%M:%S.%3N')" ${@:2}
}

function info() {
	log "${C_GREEN}INFO${NO_FORMAT} $*"
}

function error() {
	log "${C_RED}ERROR${NO_FORMAT} $*"
}

function usage() {
	echo -e "$(
		cat <<EOF
Concaternate multiple video files into a new file.

Usage:
    ${C_GREEN}$(basename "$0")${NO_FORMAT} ${F_DIM}${C_GRAY}[flags]${NO_FORMAT} ${F_DIM}--output ${F_BOLD}<output_file> ...<file>${NO_FORMAT}

Flags:
    -h, --help ${F_DIM}
      Show this help text${NO_FORMAT}
    -o, --output ${F_DIM}
      Output file${NO_FORMAT}
EOF
	)"
}

function main() {
	eval set -- "$(getopt --options 'ho:' --long 'help,output:' -- "$@")"

	file_out=""
	for opt; do
		case "$opt" in
		--output | -o)
			file_out="$2"
			shift 2
			;;
		--help | -h)
			usage
			exit 0
			;;
		--)
			shift 1
			break
			;;
		esac
	done

	if [ -z "$file_out" ]; then
		error "The -o flag is required"
		usage
		exit 1
	fi

	ffmpeg_cmd=("ffmpeg")
	filter_complex=""
	i=0
	for f in "$@"; do
		ffmpeg_cmd+=("-i" "$f")
		filter_complex+="[$i:v][$i:a]"
		i="$((i + 1))"
	done
	filter_complex+=" concat=n=$i:v=1:a=1 [outv] [outa]"
	ffmpeg_cmd+=(-filter_complex "$filter_complex")
	ffmpeg_cmd+=(-map '[outv]' -map '[outa]' -preset 'slow')
	ffmpeg_cmd+=("$file_out")

	"${ffmpeg_cmd[@]}"
}

main "$@"
