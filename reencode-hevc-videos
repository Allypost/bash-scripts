#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

clear_line() {
    printf "\r\033[2K"
}

print_status() {
    printf "\e[3;4m%s\e[0m\r" "$1"
}

print_status_report() {
    clear_line
    print_status "$1"
}

print_status_success() {
    printf "\e[30;42m %s \e[0m" "$1"
    shift
    if [ ! -z $1 ]; then
        printf " \e[4m%s\e[0m" "$*"
    fi
    printf "\n"
}

print_status_error() {
    printf "\e[1;101m %s \e[0m\n" "$1"
}

FILES=()
print_status "Scanning..."
while IFS= read -r -d $'\0'; do
    FILES+=("$REPLY")
done < <(find . -name "*.mp4" -maxdepth 1 -type f -print0 2>/dev/null)
print_status_report "Scanned"

total="${#FILES[@]}"
processed=0
for filepath in "${FILES[@]}"; do
    print_status "Checking types... ($processed/${#FILES[@]})"

    location="$PWD"

    filename=$(basename -- "$filepath")
    filename="${filename%.*}"

    HAS_HEVC="$(mediainfo --Inform="Video;%Format%" "$filepath" | grep -iE 'HEVC')"
    if [[ ! -z "${HAS_HEVC// /}" ]]; then
        printf "Transcoding \e[1;36;40m %s \e[0m... " "$filename"
        "$DIR/reencode-video-file" "$filepath" 2>/dev/null >/dev/null
        print_status_success "Done"
    fi
    ((processed += 1))
done
clear_line
