#!/usr/bin/env bash
entries=()
message=''

function list-entries() {
  pactl list cards |
    grep -P '\t\toutput:' |
    grep -Ev "input" |
    grep -Ev '\Wavailable: no\W' |
    cut -d':' -f2- |
    awk -F ' Output ' '{print $1}' |
    awk -F ': ' '{print $2 "\t" "[profile: " $1 "]"}'
}

function update_entries() {
  SAVEIFS="$IFS" # Save current IFS
  IFS=$'\n'      # Change IFS to new line
  entries="$(list-entries)"
  entries=($entries)
  IFS="$SAVEIFS" # Restore IFS
}

function display_rofi() {
  for entry in "${entries[@]}"; do
    echo -e "$entry"
  done | rofi_config
}

function rofi_config() {
  _message="Alt+a - Refresh $message"
  message=''
  rofi \
    -i \
    -theme slate-slim \
    -no-custom \
    -location 1 \
    -theme-str '
      window {
        font: "Noto Sans 10";
        padding: 0;
        width: 100%;
      }

      listview {
        lines: 5;
      }
    ' \
    -mesg "$_message" \
    -p 'Sound profile' \
    -dmenu \
    -kb-custom-19 'Alt+a' \
    $@
}

function get-profile() {
  echo "$1" | sed --regexp-extended "s|.*?\t\[profile\: (.+?)\]$|\1|"
}

function set-sound-profile-to() {
  CARD_ID="$(
    pactl list short cards |
      head -n1 |
      cut -f1
  )"

  pactl set-card-profile "$CARD_ID" "output:$1"
}

update_entries

while true; do
  chosen="$(display_rofi)"
  exit_code="$?"
  chosen="$(get-profile "$chosen")"

  case "$exit_code" in
  0)
    set-sound-profile-to "$chosen"
    exit
    ;;
  28)
    update_entries
    message="| Synced"
    ;;
  *)
    exit 1
    ;;
  esac
done
