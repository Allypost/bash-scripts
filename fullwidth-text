#!/usr/bin/node
const { stdin } = process;

const isASCII =
    (c) =>
        33 <= c
        && c <= 126
    ;

const fromASCII =
    (chars) =>
        chars
            .split('')
            .map((char) => {
                let c = char.charCodeAt(0);

                if (c === 32) {
                    c = 12288;
                }

                if (isASCII(c)) {
                    c += 2 ** 16 - 288;
                }

                return String.fromCharCode(c);
            })
            .join('')
    ;

const readLine = 
    () => {
        let result = '';

        return new Promise((resolve) => {
            if (stdin.isTTY) {
                resolve(result);
                return;
            }

            stdin.setEncoding('utf8');

            stdin.on('readable', () => {
                let chunk;

                while ((chunk = stdin.read())) {
                    result += chunk;
                }
            });

            stdin.on('end', () => {
                resolve(result);
            });
        }).then((result) => result.replace(/\n$/, ''));
    };

(async () => {
    const input = process.argv.slice(2).join(' ') || await readLine();

    process.stdout.write(fromASCII(input));
})()

